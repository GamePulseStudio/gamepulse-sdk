name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Publish to Maven Central
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          cd packages/android
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository

  publish-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install CocoaPods
        run: gem install cocoapods
      - name: Publish to CocoaPods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          cd packages/ios
          pod trunk push GameAlytics.podspec

  publish-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: |
          cd packages/web
          npm ci
      - name: Build
        run: |
          cd packages/web
          npm run build
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/web
          npm publish

  publish-unity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Unity Package
        run: |
          cd packages/unity
          zip -r ../../gamealytics-unity-${{ github.ref_name }}.zip . -x "*.meta" "Library/*" "Temp/*"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: gamealytics-unity-${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: [publish-android, publish-ios, publish-web, publish-unity]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
