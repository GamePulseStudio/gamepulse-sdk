name: Publish SDKs

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 2.0.0)'
        required: true
        default: '2.0.0'

jobs:
  publish-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Create gradle.properties with secrets
        run: |
          mkdir -p ~/.gradle
          echo "ossrhUsername=${{ secrets.OSSRH_USERNAME }}" >> ~/.gradle/gradle.properties
          echo "ossrhPassword=${{ secrets.OSSRH_PASSWORD }}" >> ~/.gradle/gradle.properties
          echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> ~/.gradle/gradle.properties
          echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> ~/.gradle/gradle.properties
          echo "signing.secretKeyRingFile=$HOME/.gradle/secring.gpg" >> ~/.gradle/gradle.properties

      - name: Import GPG key
        run: |
          echo "${{ secrets.SIGNING_SECRET_KEY }}" | base64 --decode > ~/.gradle/secring.gpg

      - name: Publish Android SDK
        run: |
          cd packages/android
          ./gradlew build publishReleasePublicationToSonatypeRepository --no-daemon --stacktrace
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

  publish-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install CocoaPods
        run: gem install cocoapods

      - name: Validate Podspec
        run: |
          cd packages/ios
          pod lib lint GameAlytics.podspec --allow-warnings --skip-import-validation

      - name: Publish to CocoaPods
        run: |
          cd packages/ios
          pod trunk push GameAlytics.podspec --allow-warnings
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  publish-unity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Create Unity Package
        run: |
          cd packages/unity
          # Create package.json for Unity Package Manager
          npm pack --dry-run
          
      - name: Upload Unity Package
        uses: actions/upload-artifact@v4
        with:
          name: unity-package
          path: packages/unity/*.tgz

  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          cd packages/core
          npm ci
          cd ../web
          npm ci

      - name: Build packages
        run: |
          cd packages/core
          npm run build
          cd ../web
          npm run build

      - name: Publish Core SDK
        run: |
          cd packages/core
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Web SDK
        run: |
          cd packages/web
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    needs: [publish-android, publish-ios, publish-unity, publish-npm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Unity Package
        run: |
          cd packages/unity
          zip -r ../../gamealytics-unity-${{ github.ref_name }}.zip . -x "*.meta" "Library/*" "Temp/*"
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: gamealytics-unity-${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
